import { ImageStyle, StyleProp, TextStyle, ViewStyle } from 'react-native';
import ViewShot from 'react-native-view-shot';

export type PhysicalCardTransactionStatusComponentProps = {
  style?: PhysicalCardTransactionStatusComponentStyles;
  props: {
    onBackToDashboard: () => void;
    onGoToHelpCenter: () => void;
    isSuccess: boolean;
  };
};

export type PhysicalCardTransactionStatusComponentStyles = {
  container?: StyleProp<ViewStyle>;
  content?: StyleProp<ViewStyle>;
  pageTitle?: StyleProp<TextStyle>;
  pageSubtite?: StyleProp<TextStyle>;
  actionWrapper?: StyleProp<ViewStyle>; 
  titleSection?: StyleProp<ViewStyle>; 
  dragSection?: StyleProp<ViewStyle>; 
  amountRow?: StyleProp<ViewStyle>; 
  processRow?: StyleProp<ViewStyle>; 
  title?: StyleProp<TextStyle>; 
  subTitle?: StyleProp<TextStyle>;
  amountNumber?: StyleProp<TextStyle>; 
  lineAmount?: StyleProp<ViewStyle>; 
  circleAmount?: StyleProp<ViewStyle>; 
  viewAmountNumber?: StyleProp<ViewStyle>; 
  bigLineAmount?: StyleProp<ViewStyle>; 
  amountLineSection?: StyleProp<ViewStyle>; 
  bigLineColumnAmount?: StyleProp<ViewStyle>; 
  row?: StyleProp<ViewStyle>;
  footer?: StyleProp<ViewStyle>;
  cbContainer?: StyleProp<ViewStyle>;
  image?: StyleProp<ImageStyle>;
  headerWrapper?: StyleProp<ViewStyle>;
  pcCardPreviewImgWrapper?: StyleProp<ViewStyle>;
  cardContainer?: StyleProp<ViewStyle>;
  orderTitleSection?: StyleProp<ViewStyle>;
  rowBetween?: StyleProp<ViewStyle>;
  leftSection?: StyleProp<ViewStyle>;
  noteContainer?: StyleProp<TextStyle>;
  cardTitle?: StyleProp<TextStyle>;
  cardSubTitle?: StyleProp<TextStyle>;
  noteCardContent?: StyleProp<TextStyle>;
  noteCardTitle?: StyleProp<TextStyle>;
  orderTitle?: StyleProp<TextStyle>;
  noteContent?: StyleProp<TextStyle>;
  noteTitle?: StyleProp<TextStyle>;
  cardMoney?: StyleProp<TextStyle>;
  titleSuccess?: StyleProp<TextStyle>;
  verticalSpacing?: StyleProp<ViewStyle>;
  transactionInfo?: StyleProp<ViewStyle>;
  smallVerticalSpacing?: StyleProp<ViewStyle>;
  logoSection?: StyleProp<ViewStyle>;
  containerViewShot?: ViewStyle;
  containerFailed?: StyleProp<ViewStyle>;
  errorContentWrapper?: StyleProp<ViewStyle>;
  columnBetween?: StyleProp<ViewStyle>;
  iconErrorWrapper?: StyleProp<ViewStyle>;
  rowErrorBetween?: StyleProp<ViewStyle>;
  errorMessageWrapper?: StyleProp<ViewStyle>;
  statusLabel?: StyleProp<TextStyle>;
  errorMessageLabel?: StyleProp<TextStyle>;
  infoTitle?: StyleProp<TextStyle>;
  errorInfoTitleColor?: StyleProp<TextStyle>;
  infoSubTitle?: StyleProp<TextStyle>;
  errorTitleWrapper?: StyleProp<ViewStyle>;
  btnTransparent?: StyleProp<TextStyle>;
  labelBtnTransaprent?: StyleProp<TextStyle>;
};
